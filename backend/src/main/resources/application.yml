# spring.application.name=chatapp
# spring.datasource.url=jdbc:postgresql://ep-damp-pine-a1cdyfzx.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
# spring.datasource.username=neondb_owner
# spring.datasource.password=D1lGzPj8NVJA
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.hibernate.ddl-auto=create
# spring.jpa.show-sql=true


spring:
  application:
    name: chatapp
  datasource:
    url: jdbc:postgresql://ep-damp-pine-a1cdyfzx.ap-southeast-1.aws.neon.tech/neondb?sslmode=require
    username: neondb_owner
    password: D1lGzPj8NVJA
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true

  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: myGroup,batchGroup
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties: 
        spring:
          json:
            trusted.packages: '*'
            type.mapping: chatMessage:com.websocket.chatapp.chat.ChatMessage
      enable-auto-commit: true
      auto-commit-interval: 1000

    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties: 
        spring.json.type.mapping:
          kafkaProductIssueResponse: chatMessage:com.websocket.chatapp.chat.ChatMessage
